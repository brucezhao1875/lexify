# Lexify 项目开发规范

## 项目背景
这是一个英语词根学习应用，类似百词斩但专注于词根分析和词汇网络构建。

## 核心功能要求
1. **用户水平管理**: 支持CET-6、托福、雅思等水平选择，智能筛选单词难度
2. **词根分析**: 输入单词自动分析词根，建立词根-单词关联关系
3. **词汇网络**: 构建3层深度的词根关系图，支持交互式可视化

## 技术栈
- Next.js 14 (App Router) + TypeScript
- Tailwind CSS 样式
- D3.js/vis.js 数据可视化
- Vercel 部署

## 代码规范
1. **组件命名**: 使用PascalCase，如 `WordAnalysis.tsx`
2. **文件结构**: 按功能模块组织，components/下按功能分类
3. **类型定义**: 所有接口和类型在 types/ 目录下定义
4. **API设计**: 使用Next.js API Routes，RESTful风格
5. **样式**: 优先使用Tailwind CSS，避免内联样式

## 开发重点
1. **响应式设计**: 确保电脑和手机都能良好访问
2. **性能优化**: 词根分析算法要高效，支持大量数据处理
3. **用户体验**: 词根图谱要直观易懂，交互流畅
4. **数据准确性**: 词根分析要准确，建立可靠的词根数据库

## 文件组织
- `src/app/`: Next.js页面和API路由
- `src/components/`: 可复用组件
- `src/lib/`: 工具函数、词根分析算法
- `src/types/`: TypeScript类型定义
- `src/data/`: 词根数据文件

## 注意事项
- 所有用户输入需要验证和清理
- 词根数据要支持增量更新
- 图谱渲染要考虑性能，避免节点过多
- 支持用户自定义学习目标和难度设置